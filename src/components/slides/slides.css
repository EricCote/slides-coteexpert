@import url('https://fonts.googleapis.com/css2?family=Days+One&display=swap');

div#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 0 2rem;
}

:root {
  --bs-font-sans-serif: Avenir Next, system-ui;
  scrollbar-width: none;
}

/* Safari */
:root::-webkit-scrollbar {
  display: none;
}

/* Border-box all the things */
* {
  box-sizing: border-box;
}

/* Cover the whole screen */
/* html,
body {
  block-size: 100%;
} */

h1 {
  line-height: 1.1;
}

h2,
h3 {
  font-size: 2rem;
}

:is(h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6) {
  font-weight: normal;
  font-family: 'days one', system-ui;
}

:is(h1, h2, h3, h4, h5, h6) {
  margin-block-end: 1rem;
}

/* use the smooth behavior if no sandpack */
article:not(:has(.sandpack)) {
  scroll-behavior: smooth;
}

/* This is the slide deck */
article {
  /* Cover the screen */
  block-size: 100%;
  /* Make it a flex container */
  display: flex;
  /* Make it a scroll container */
  overflow-x: scroll;
  /* Make inline scrolling snap */
  scroll-snap-type: x mandatory;
  /*scrollbar-width: none; /* Firefox */

  /* Use inline axis for scrolling where supported */
  @supports (overflow-inline: scroll) {
    overflow-inline: scroll;
    scroll-snap-type: inline mandatory;
  }
  /* Set up a slide counter 
  counter-reset: slide;*/
  scrollbar-width: none;
}

/* Safari */
article::-webkit-scrollbar {
  display: none;
}

/* These are the slides */
article > * {
  position: relative;

  height: 100dvh;
  overflow-y: scroll;

  padding: 2rem;
  font-size: 1.5rem;

  /* Fill the scroll container */
  flex-grow: 0;
  flex-shrink: 0;
  flex-basis: 100%;

  /* Scroll to the start of the slide */
  scroll-snap-align: start;

  /* Increment the slide counter
  counter-increment: slide; */
  scrollbar-width: none;
}

/* Safari */
article > ::-webkit-scrollbar {
  display: none;
}

article > :focus-visible {
  outline: none;
}

.corner-number {
  position: absolute;
  inset-block-start: 1rem;
  inset-inline-end: 1rem;
  padding: 0.75rem;
  font-size: 1rem;
  font-weight: 700;
  font-variant: tabular-nums;
  line-height: 1;
  cursor: pointer;
  background-color: var(--bs-body-color);
  color: var(--bs-body-bg);
  clip-path: circle();
}

/* This is a cover layout for the first slide */
article > .first-slide {
  display: grid;
  place-content: center;
  text-align: center;
  padding-inline: 4rem;
  font-size: clamp(1rem, 1rem + 2vw, 3rem);
  line-height: 1.3;
}

/* For the cover layout set the measure */
article > :first-child > h1 {
  max-inline-size: 21ch;
  font-size: 2.5em;
}

.dark-image {
  display: none;
}

.light-image {
  display: block;
}

[data-bs-theme='dark'] .dark-image {
  display: block;
}

[data-bs-theme='dark'] .light-image {
  display: none;
}

[data-bs-theme='dark'] tr:hover {
  background-color: darkslategrey;
}

[title='Open in CodeSandbox'] > span {
  display: none;
}

pre {
  padding: 0.5rem 0;
  overflow-x: auto;
}

pre [data-line] {
  padding: 0 0.5rem;
}

code[data-theme*=' '],
code[data-theme*=' '] span {
  color: var(--shiki-light);
  background-color: var(--shiki-light-bg);
}

[data-bs-theme='dark'] code[data-theme*=' '],
[data-bs-theme='dark'] code[data-theme*=' '] span {
  color: var(--shiki-dark);
  background-color: var(--shiki-dark-bg);
}

span[data-line]:hover,
span[data-line]:hover > span {
  background-color: rgb(191, 208, 163) !important;
}

[data-bs-theme='dark'] span[data-line]:hover,
[data-bs-theme='dark'] span[data-line]:hover > span {
  background-color: rgb(50, 62, 31) !important;
}

code span[data-highlighted-line],
code span[data-highlighted-line] span {
  background-color: #e3e3e3;
}

[data-bs-theme='dark'] code span[data-highlighted-line],
[data-bs-theme='dark'] code span[data-highlighted-line] span {
  background-color: darkslategray;
}

code {
  counter-reset: line;
}

code[data-line-numbers] > [data-line]::before {
  counter-increment: line;
  content: counter(line);

  /* Other styling */
  display: inline-block;
  width: 1rem;
  margin-right: 2rem;
  text-align: right;
  color: gray;
}

code[data-line-numbers-max-digits='2'] > [data-line]::before {
  width: 2rem;
}

code[data-line-numbers-max-digits='3'] > [data-line]::before {
  width: 3rem;
}

/* pre > code {
  background-color: red;
} */
